% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/persist.R
\name{persistence}
\alias{persistence}
\alias{stat_flat}
\alias{geom_persistence}
\title{Plot Persistent Homology as a Persistence Diagram}
\usage{
stat_flat(mapping = NULL, data = NULL, geom = "persistence",
  position = "identity", flat = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE, ...)

geom_persistence(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", flat = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data.}

\item{geom}{The geometric object used to display the data.
Defaults to `point`; pass a string to override the default.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{na.rm}{Logical:
if `FALSE`, the default, `NA` values are not included
if `TRUE`, `NA` values constitute a separate category,
plotted in grey (regardless of the color scheme)}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[=borders]{borders()}}.}

\item{...}{additional arguments passed to [ggplot2::layer()]}

\item{stat}{The statistical transformation used to display the data.
Defaults to `identity`; another useful option is `flat`.
Pass a string to override the default.}
}
\description{
Plots a flat persistence diagram.
}
\examples{
#####EXAMPLE 1#####
# toy example
toy.data <- data.frame(
  birth = c(0, 0, 1, 2, 1.5),
  death = c(5, 3, 5, 3, 6),
  dim = c("0", "0", "2", "1", "1")
)

# persistence diagram
ggplot(toy.data,
       aes(start = birth, end = death, colour = dim, shape = dim)) +
  geom_persistence()
# flat persistence diagram using the `stat_flat` layer method
ggplot(toy.data,
       aes(start = birth, end = death, colour = dim, shape = dim)) +
  geom_persistence(stat = "flat")
ggplot(toy.data,
       aes(start = birth, end = death, colour = dim, shape = dim)) +
  stat_flat(geom = "persistence")
# flat persistence diagram using the `flat = TRUE` parameter method
ggplot(toy.data,
       aes(start = birth, end = death, colour = dim, shape = dim)) +
  geom_persistence(flat = TRUE)

# flat persistence diagram using the geom layer with minimalist theme
ggplot(toy.data,
       aes(start = birth, end = death, colour = dim, shape = dim)) +
  geom_persistence(stat = "flat") +
  theme_tda()

#####EXAMPLE 2#####
# load library and dataset for comprehensive example
library("TDAstats")
data("annulus2d") # noisy unit circle (betti-1 number = 1)

# calculate persistence homology and format
annulus.phom <- as.data.frame(calculate_homology(annulus2d))
annulus.phom$dimension <- as.factor(annulus.phom$dimension)

# pretty diagonal persistence diagram
ggplot(annulus.phom, aes(start = birth, end = death,
                         shape = dimension, colour = dimension)) +
  geom_persistence() +
  theme_persist()

# another way to get a pretty flat persistence diagram
ggplot(annulus.phom, aes(start = birth, end = death,
                         shape = dimension, colour = dimension)) +
  geom_persistence(stat = "flat") +
  theme_persist()
ggplot(annulus.phom, aes(start = birth, end = death,
                         shape = dimension, colour = dimension)) +
  geom_persistence(flat = TRUE) +
  theme_persist()
}
\seealso{
[ggplot2::layer()] for additional arguments.

Other TDA plot layers: \code{\link{barcode}}
}
\concept{TDA plot layers}
