% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vietoris.R
\name{vietoris}
\alias{vietoris}
\alias{stat_disk}
\alias{stat_vietoris1}
\alias{stat_vietoris2}
\title{The 1- and 2-skeletons of the Vietoris complex of a 2-dimensional point cloud}
\usage{
stat_disk(mapping = NULL, data = NULL, geom = "polygon",
  position = "identity", na.rm = FALSE, radius = 0, segments = 60,
  show.legend = NA, inherit.aes = TRUE, ...)

stat_vietoris1(mapping = NULL, data = NULL, geom = "segment",
  position = "identity", na.rm = FALSE, diameter = Inf,
  show.legend = NA, inherit.aes = TRUE, ...)

stat_vietoris2(mapping = NULL, data = NULL, geom = "polygon",
  position = "identity", na.rm = FALSE, diameter = Inf,
  show.legend = NA, inherit.aes = TRUE, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data.}

\item{geom}{The geometric object to use display the data; defaults to
`segment` in `geom_vietoris1()` and to `polygon` in `geom_vietoris2`. Pass
a string to override the default.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{na.rm}{Logical; ignored.}

\item{radius}{A positive number; the radius of the disk to render around each
point.}

\item{segments}{The number of segments to be used in drawing each disk.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[=borders]{borders()}}.}

\item{...}{Additional arguments passed to [ggplot2::layer()].}

\item{diameter}{A positive number; the distance between points at which
segments will not be included.}
}
\description{
The *Vietoris complex* of a point cloud is a simplicial complex consisting of a
simplex for each subset of points within a fixed diameter of each other. The
*1-skeleton* consists of all points (0-simplices) and edges between pairs
(1-simplices), and the *2-skeleton* additionally faces among all triples
(2-simplices), of a simplicial complex. Given `x` and `y` coordinates,
`stat_vietoris1()` encodes the edges of the Vietoris complex using `x`, `y`,
`xend`, and `yend` for `geom_segment()`, and `stat_vietoris2()` encodes the
faces using `x`, `y`, and `group` for `geom_polygon()`. Note that these stat
layers encode only the simplices of fixed dimension; to render the 1- or
2-skeleton, they can be combined with `geom_point()`.
}
\examples{
# function to generate noisy 2D circles
make_noisy_circle <- function(n, sd = .01) {
  theta <- stats::runif(n = n, min = 0, max = 2 * pi)
  cbind(x = cos(theta) + stats::rnorm(n, 0, sd),
        y = sin(theta) + stats::rnorm(n, 0, sd))
}

# generate a noisy 2D circle
set.seed(1)
d <- as.data.frame(make_noisy_circle(n = 36, sd = .05))

# plot balls beneath points
ggplot(d, aes(x = x, y = y)) +
  theme_bw() +
  coord_fixed() +
  stat_disk(radius = .35, fill = "aquamarine3", alpha = .15) +
  geom_point()

# plot 1-skeleton
ggplot(d, aes(x = x, y = y)) +
  theme_bw() +
  coord_fixed() +
  stat_vietoris1(diameter = .7, alpha = .25) +
  geom_point()

# plot 2-skeleton
ggplot(d, aes(x = x, y = y)) +
  theme_bw() +
  coord_fixed() +
  stat_vietoris2(diameter = .7, fill = "darkgoldenrod", alpha = .1) +
  stat_vietoris1(diameter = .7, alpha = .25) +
  geom_point()

# plot 1-skeleton atop balls
ggplot(d, aes(x = x, y = y)) +
  theme_bw() +
  coord_fixed() +
  stat_disk(radius = .35, fill = "aquamarine3", alpha = .15) +
  stat_vietoris1(diameter = .7, size = .2) +
  geom_point(size = .3)

# plot 2-skeleton atop balls
ggplot(d, aes(x = x, y = y)) +
  theme_bw() +
  coord_fixed() +
  stat_disk(radius = .35, fill = "aquamarine3", alpha = .15) +
  stat_vietoris2(diameter = .7, fill = "darkgoldenrod", alpha = .1) +
  stat_vietoris1(diameter = .7, size = .2) +
  geom_point(size = .3)
}
\seealso{
[ggplot2::layer()] for additional arguments.
}
\concept{point cloud plot layers}
